{"version":3,"sources":["components/Pokemon.js","components/PokeList.js","components/Header.js","components/Search.js","components/App.js","index.js"],"names":["Pokemon","props","favHandlerChild","bind","ev","this","favHandler","currentTarget","id","types","map","type","index","key","className","favPokemons","includes","toString","onClick","name","src","url","alt","evolution","React","Component","defaultProps","PokeList","pokemonResult","pokemons","pokemon","Header","Search","searchHandlerChild","isTypeHandlerChild","searchHandler","isTypeHandler","target","value","checked","htmlFor","placeholder","onChange","isType","isTypeWater","isTypeGrass","isTypeFlying","isTypeBug","isTypeRock","isTypeElectric","isTypeConfusion","isTypePoison","App","state","pokemonsFromApi","searchText","clickedId","selectedPokemon","unFavedPokemon","filter","setState","push","localStorage","setItem","JSON","stringify","searchInput","toLowerCase","data","hasOwnProperty","getItem","parse","console","log","newFavPokemons","pokemonsSearch","filteredPokemons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"22DAGMA,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFN,E,4DAKHC,GACdC,KAAKJ,MAAMK,WAAWF,EAAGG,cAAcC,M,+BAIvC,IACMC,EADeJ,KAAKJ,MAAMQ,MACLC,KAAI,SAACC,EAAMC,GACpC,OAAO,wBAAIC,IAAKD,GAAQD,MAG1B,OAEE,wBACEG,UAAS,kCACPT,KAAKJ,MAAMc,YAAYC,SAASX,KAAKJ,MAAMO,GAAGS,YAAc,MAAQ,IAEtEC,QAASb,KAAKH,gBACdM,GAAIH,KAAKJ,MAAMO,IAEf,wBAAIM,UAAU,iCAAiCT,KAAKJ,MAAMkB,MAC1D,yBAAKC,IAAKf,KAAKJ,MAAMoB,IAAKC,IAAKjB,KAAKJ,MAAMkB,OAC1C,uBAAGL,UAAU,6CAAb,cACA,uBAAGA,UAAU,gDACe,OAAzBT,KAAKJ,MAAMsB,UACR,kBACAlB,KAAKJ,MAAMsB,WAEjB,yBAAKT,UAAU,kCACb,uBAAGA,UAAU,yCAAb,UACA,wBAAIA,UAAU,2CAA2CL,S,GAnC7Ce,IAAMC,YA0C5BzB,EAAQ0B,aAAe,CACrBH,UAAW,WAUEvB,QChCA2B,E,uKApBH,IAAD,OACDC,EAAgBvB,KAAKJ,MAAM4B,SAASnB,KAAI,SAACoB,GAC7C,OACE,kBAAC,EAAD,CACEjB,IAAKiB,EAAQtB,GACbA,GAAIsB,EAAQtB,GACZW,KAAMW,EAAQX,KACdV,MAAOqB,EAAQrB,MACfY,IAAKS,EAAQT,IACbE,UAAWO,EAAQP,UACnBjB,WAAY,EAAKL,MAAMK,WACvBS,YAAa,EAAKd,MAAMc,iBAK9B,OAAO,wBAAID,UAAU,kBAAkBc,O,GAjBpBJ,IAAMC,WCSdM,E,uKARX,OACE,4BAAQjB,UAAU,UAChB,wBAAIA,UAAU,cAAd,gB,GAJaU,IAAMC,WCkIZO,E,kDAjIb,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IAEDgC,mBAAqB,EAAKA,mBAAmB9B,KAAxB,gBAC1B,EAAK+B,mBAAqB,EAAKA,mBAAmB/B,KAAxB,gBAJT,E,+DAOAC,GACjBC,KAAKJ,MAAMkC,cAAc/B,K,yCAGRA,GACjBC,KAAKJ,MAAMmC,cAAc,CACvBvB,IAAKT,EAAGiC,OAAOlB,KACfmB,MAAOlC,EAAGiC,OAAOE,Y,+BAKnB,OACE,8BACE,2BAAOC,QAAQ,UAAf,yBACA,2BACE7B,KAAK,OACLH,GAAG,SACHiC,YAAY,sBACZC,SAAUrC,KAAK4B,qBAEjB,mDACA,2BAAOO,QAAQ,eACb,2BACE7B,KAAK,WACLH,GAAG,YACHW,KAAK,SACLoB,QAASlC,KAAKJ,MAAM0C,OACpBD,SAAUrC,KAAK6B,qBANnB,QAUA,2BAAOM,QAAQ,qBACb,2BACE7B,KAAK,WACLH,GAAG,aACHW,KAAK,cACLoB,QAASlC,KAAKJ,MAAM2C,YACpBF,SAAUrC,KAAK6B,qBANnB,SAWA,2BAAOM,QAAQ,qBACb,2BACE7B,KAAK,WACLH,GAAG,aACHW,KAAK,cACLoB,QAASlC,KAAKJ,MAAM4C,YACpBH,SAAUrC,KAAK6B,qBANnB,SAWA,2BAAOM,QAAQ,sBACb,2BACE7B,KAAK,WACLH,GAAG,cACHW,KAAK,eACLoB,QAASlC,KAAKJ,MAAM6C,aACpBJ,SAAUrC,KAAK6B,qBANnB,UAWA,2BAAOM,QAAQ,mBACb,2BACE7B,KAAK,WACLH,GAAG,WACHW,KAAK,YACLoB,QAASlC,KAAKJ,MAAM8C,UACpBL,SAAUrC,KAAK6B,qBANnB,OAWA,2BAAOM,QAAQ,oBACb,2BACE7B,KAAK,WACLH,GAAG,YACHW,KAAK,aACLoB,QAASlC,KAAKJ,MAAM+C,WACpBN,SAAUrC,KAAK6B,qBANnB,QAWA,2BAAOM,QAAQ,wBACb,2BACE7B,KAAK,WACLH,GAAG,gBACHW,KAAK,iBACLoB,QAASlC,KAAKJ,MAAMgD,eACpBP,SAAUrC,KAAK6B,qBANnB,YAUA,2BAAOM,QAAQ,yBACb,2BACE7B,KAAK,WACLH,GAAG,iBACHW,KAAK,kBACLoB,QAASlC,KAAKJ,MAAMiD,gBACpBR,SAAUrC,KAAK6B,qBANnB,aAUA,2BAAOM,QAAQ,sBACb,2BACE7B,KAAK,WACLH,GAAG,cACHW,KAAK,eACLoB,QAASlC,KAAKJ,MAAMkD,aACpBT,SAAUrC,KAAK6B,qBANnB,e,GAnHaT,a,OC+LN2B,E,kDAzLb,WAAYnD,GAAQ,IAAD,8BACjB,cAAMA,IACDoD,MAAQ,CACXxB,SAAUyB,EACVvC,YAAa,GACbwC,WAAY,GACZZ,QAAQ,EACRC,aAAa,GAEf,EAAKtC,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKgC,cAAgB,EAAKA,cAAchC,KAAnB,gBACrB,EAAKiC,cAAgB,EAAKA,cAAcjC,KAAnB,gBAXJ,E,uDAcRqD,GACT,IAAMzC,EAAcV,KAAKgD,MAAMtC,YAE/B,GAAIA,EAAYC,SAASwC,GAAY,CACnC,IAAMC,EAAkBD,EAClBE,EAAiB3C,EAAY4C,QACjC,SAAC7B,GAAD,OAAaA,IAAY2B,KAE3BpD,KAAKuD,SAAS,CAAE7C,YAAa2C,SAE7B3C,EAAY8C,KAAKL,GACjBnD,KAAKuD,SAAS,CAAE7C,YAAaA,IAG/B+C,aAAaC,QAAQ,cAAeC,KAAKC,UAAU5D,KAAKgD,MAAMtC,gB,oCAKlDX,GACZ,IAAM8D,EAAc9D,EAAGG,cAAc+B,MAAM6B,cAC3C9D,KAAKuD,SAAS,CAAEL,WAAYW,M,oCAGhBE,GACZ/D,KAAKuD,SAAL,eAAiBQ,EAAKvD,IAAMuD,EAAK9B,U,0CAWjC,IAAK,IAAI9B,KAAMH,KAAKgD,MAElB,GAAIS,aAAaO,eAAe7D,GAAK,CAEnC,IAAI8B,EAAQwB,aAAaQ,QAAQ9D,GAE5B8B,EAAQ0B,KAAKO,MAAMjC,GACtBjC,KAAKuD,SAAL,eAAiBpD,EAAK8B,O,+BASpB,IAAD,OACPkC,QAAQC,IAAIpE,KAAKgD,OAEjB,IAAMqB,EAAiBrE,KAAKgD,MAAMxB,SAAS8B,QAAO,SAAC7B,GAAD,OAChD,EAAKuB,MAAMtC,YAAYC,SAASc,EAAQtB,GAAK,OAGzC+C,EAAalD,KAAKgD,MAAME,WACxBoB,EAAiBtE,KAAKgD,MAAMxB,SAI5B+C,EAAmBvE,KAAKgD,MAAMxB,SACjC8B,QAAO,SAAC7B,GACP,QAAIA,EAAQX,KAAKgD,cAAcnD,SAASuC,QAGtCA,EAAWvC,SAAS,QACpBc,EAAQrB,MAAMO,SAAS,cAIvBuC,EAAWvC,SAAS,OACpBc,EAAQrB,MAAMO,SAAS,eAGduC,EAAWvC,SAAS,OAAQc,EAAQrB,MAAMO,SAAS,aAG5DuC,EAAWvC,SAAS,WACpBc,EAAQrB,MAAMO,SAAS,eAIvBuC,EAAWvC,SAAS,OACpBc,EAAQrB,MAAMO,SAAS,gBAIvBuC,EAAWvC,SAAS,QACpBc,EAAQrB,MAAMO,SAAS,eAGduC,EAAWvC,SAAS,OAAQc,EAAQrB,MAAMO,SAAS,kBAS/D2C,QAAO,SAAC7B,GAAD,OACgB,IAAtB,EAAKuB,MAAMV,QAAkBb,EAAQrB,MAAMO,SAAS,WAErD2C,QAAO,SAAC7B,GAAD,OACqB,IAA3B,EAAKuB,MAAMT,aAAuBd,EAAQrB,MAAMO,SAAS,YAG1D2C,QAAO,SAAC7B,GAAD,OACsB,IAA5B,EAAKuB,MAAMF,cACPrB,EAAQrB,MAAMO,SAAS,aAI5B2C,QAAO,SAAC7B,GAAD,OACqB,IAA3B,EAAKuB,MAAMR,aAAuBf,EAAQrB,MAAMO,SAAS,YAE1D2C,QAAO,SAAC7B,GAAD,OACsB,IAA5B,EAAKuB,MAAMP,cACPhB,EAAQrB,MAAMO,SAAS,aAG5B2C,QAAO,SAAC7B,GAAD,OACmB,IAAzB,EAAKuB,MAAMN,WAAqBjB,EAAQrB,MAAMO,SAAS,UAExD2C,QAAO,SAAC7B,GAAD,OACoB,IAA1B,EAAKuB,MAAML,YAAsBlB,EAAQrB,MAAMO,SAAS,WAGzD2C,QAAO,SAAC7B,GAAD,OACwB,IAA9B,EAAKuB,MAAMJ,gBACPnB,EAAQrB,MAAMO,SAAS,eAG5B2C,QAAO,SAAC7B,GAAD,OACyB,IAA/B,EAAKuB,MAAMH,iBACPpB,EAAQrB,MAAMO,SAAS,gBAI/B,OACE,yBAAKF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEqB,cAAe9B,KAAK8B,cACpBQ,OAAQtC,KAAKgD,MAAMV,OACnBC,YAAavC,KAAKgD,MAAMT,YACxBR,cAAe/B,KAAK+B,gBAGtB,kBAAC,EAAD,CACEP,SAAW+C,GAAmBD,EAC9B5D,YAAaV,KAAKgD,MAAMtC,YACxBT,WAAYD,KAAKC,aAGnB,yCACA,kBAAC,EAAD,CACEQ,UAAU,eACVe,SAAU6C,EACV3D,YAAaV,KAAKgD,MAAMtC,YACxBT,WAAYD,KAAKC,kB,GAnLTkB,IAAMC,WCFxBoD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ad1e18f7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Pokemon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.favHandlerChild = this.favHandlerChild.bind(this);\n  }\n\n  favHandlerChild(ev) {\n    this.props.favHandler(ev.currentTarget.id);\n  }\n\n  render() {\n    const pokemonTypes = this.props.types;\n    const types = pokemonTypes.map((type, index) => {\n      return <li key={index}>{type}</li>;\n    });\n\n    return (\n      //not really sure about why I have to stringify this id..., but it doesn't work if I remove it.\n      <li\n        className={`App__container__pokemon ${\n          this.props.favPokemons.includes(this.props.id.toString()) ? 'fav' : ''\n        }`}\n        onClick={this.favHandlerChild}\n        id={this.props.id}\n      >\n        <h2 className=\"App__container__pokemon__name\">{this.props.name}</h2>\n        <img src={this.props.url} alt={this.props.name} />\n        <p className=\"App__container__pokemon__evolution__title\">Evolution:</p>\n        <p className=\"App__container__pokemon__evolution__pokemons\">\n          {this.props.evolution === null\n            ? 'First evolution'\n            : this.props.evolution}\n        </p>\n        <div className=\"App__container__pokemon__types\">\n          <p className=\"App__container__pokemon__types__title\">Types:</p>\n          <ul className=\"App__container__pokemon__types__content\">{types}</ul>\n        </div>\n      </li>\n    );\n  }\n}\n\nPokemon.defaultProps = {\n  evolution: 'No data',\n};\n\nPokemon.propTypes = {\n  url: PropTypes.string,\n  name: PropTypes.string,\n  types: PropTypes.array,\n  evolution: PropTypes.string,\n};\n\nexport default Pokemon;\n","import React from 'react';\nimport Pokemon from './Pokemon';\n\nclass PokeList extends React.Component {\n  render() {\n    const pokemonResult = this.props.pokemons.map((pokemon) => {\n      return (\n        <Pokemon\n          key={pokemon.id}\n          id={pokemon.id}\n          name={pokemon.name}\n          types={pokemon.types}\n          url={pokemon.url}\n          evolution={pokemon.evolution}\n          favHandler={this.props.favHandler}\n          favPokemons={this.props.favPokemons}\n        />\n      );\n    });\n\n    return <ul className=\"App__container\">{pokemonResult}</ul>;\n  }\n}\n\nexport default PokeList;\n","import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <h1 className=\"App__title\">Pokedex</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchHandlerChild = this.searchHandlerChild.bind(this);\n    this.isTypeHandlerChild = this.isTypeHandlerChild.bind(this);\n  }\n\n  searchHandlerChild(ev) {\n    this.props.searchHandler(ev);\n  }\n\n  isTypeHandlerChild(ev) {\n    this.props.isTypeHandler({\n      key: ev.target.name,\n      value: ev.target.checked,\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <label htmlFor=\"search\">Search for a pokemon </label>\n        <input\n          type=\"text\"\n          id=\"search\"\n          placeholder=\"Search your pokemon\"\n          onChange={this.searchHandlerChild}\n        />\n        <span> Filter by type: </span>\n        <label htmlFor=\"type-filter\">\n          <input\n            type=\"checkbox\"\n            id=\"type-fire\"\n            name=\"isType\"\n            checked={this.props.isType}\n            onChange={this.isTypeHandlerChild}\n          />\n          Fire\n        </label>\n        <label htmlFor=\"type-water-filter\">\n          <input\n            type=\"checkbox\"\n            id=\"type-water\"\n            name=\"isTypeWater\"\n            checked={this.props.isTypeWater}\n            onChange={this.isTypeHandlerChild}\n          />\n          Water\n        </label>\n\n        <label htmlFor=\"type-grass-filter\">\n          <input\n            type=\"checkbox\"\n            id=\"type-grass\"\n            name=\"isTypeGrass\"\n            checked={this.props.isTypeGrass}\n            onChange={this.isTypeHandlerChild}\n          />\n          Grass\n        </label>\n\n        <label htmlFor=\"type-Flying-filter\">\n          <input\n            type=\"checkbox\"\n            id=\"type-Flying\"\n            name=\"isTypeFlying\"\n            checked={this.props.isTypeFlying}\n            onChange={this.isTypeHandlerChild}\n          />\n          Flying\n        </label>\n\n        <label htmlFor=\"type-Bug-filter\">\n          <input\n            type=\"checkbox\"\n            id=\"type-Bug\"\n            name=\"isTypeBug\"\n            checked={this.props.isTypeBug}\n            onChange={this.isTypeHandlerChild}\n          />\n          Bug\n        </label>\n\n        <label htmlFor=\"type-Rock-filter\">\n          <input\n            type=\"checkbox\"\n            id=\"type-Rock\"\n            name=\"isTypeRock\"\n            checked={this.props.isTypeRock}\n            onChange={this.isTypeHandlerChild}\n          />\n          Rock\n        </label>\n\n        <label htmlFor=\"type-Electric-filter\">\n          <input\n            type=\"checkbox\"\n            id=\"type-Electric\"\n            name=\"isTypeElectric\"\n            checked={this.props.isTypeElectric}\n            onChange={this.isTypeHandlerChild}\n          />\n          Electric\n        </label>\n        <label htmlFor=\"type-Confusion-filter\">\n          <input\n            type=\"checkbox\"\n            id=\"type-Confusion\"\n            name=\"isTypeConfusion\"\n            checked={this.props.isTypeConfusion}\n            onChange={this.isTypeHandlerChild}\n          />\n          Confusion\n        </label>\n        <label htmlFor=\"type-Poison-filter\">\n          <input\n            type=\"checkbox\"\n            id=\"type-Poison\"\n            name=\"isTypePoison\"\n            checked={this.props.isTypePoison}\n            onChange={this.isTypeHandlerChild}\n          />\n          Poison\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport '../stylesheets/App.scss';\nimport PokeList from './PokeList';\nimport Header from './Header';\nimport Search from './Search';\nimport pokemonsFromApi from '../data/pokemons.json';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemons: pokemonsFromApi,\n      favPokemons: [],\n      searchText: '',\n      isType: false,\n      isTypeWater: false,\n    };\n    this.favHandler = this.favHandler.bind(this);\n    this.searchHandler = this.searchHandler.bind(this);\n    this.isTypeHandler = this.isTypeHandler.bind(this);\n  }\n\n  favHandler(clickedId) {\n    const favPokemons = this.state.favPokemons;\n\n    if (favPokemons.includes(clickedId)) {\n      const selectedPokemon = clickedId;\n      const unFavedPokemon = favPokemons.filter(\n        (pokemon) => pokemon !== selectedPokemon\n      );\n      this.setState({ favPokemons: unFavedPokemon });\n    } else {\n      favPokemons.push(clickedId);\n      this.setState({ favPokemons: favPokemons });\n    }\n\n    localStorage.setItem('favPokemons', JSON.stringify(this.state.favPokemons));\n  }\n\n  //SEARCH AND FILTERS\n\n  searchHandler(ev) {\n    const searchInput = ev.currentTarget.value.toLowerCase();\n    this.setState({ searchText: searchInput });\n  }\n\n  isTypeHandler(data) {\n    this.setState({ [data.key]: data.value });\n  }\n\n  //LOCAL STORAGE\n\n  // componentDidUpdate() {\n\n  // }\n\n  componentDidMount() {\n    // for all items in state\n    for (let id in this.state) {\n      // if the id exists in localStorage - hasOwnProperty returns a boolean which specifies if the object has the property I'm looking for.\n      if (localStorage.hasOwnProperty(id)) {\n        // get the id's value from localStorage\n        let value = localStorage.getItem(id);\n        // parse the localStorage string and setState\n        if ((value = JSON.parse(value))) {\n          this.setState({ [id]: value });\n        } else {\n          // handle empty string\n          this.setState({ [id]: value });\n        }\n      }\n    }\n  }\n\n  render() {\n    console.log(this.state);\n\n    const newFavPokemons = this.state.pokemons.filter((pokemon) =>\n      this.state.favPokemons.includes(pokemon.id + '')\n    );\n\n    const searchText = this.state.searchText;\n    const pokemonsSearch = this.state.pokemons;\n\n    //FIXME, waaaaay to long.\n\n    const filteredPokemons = this.state.pokemons\n      .filter((pokemon) => {\n        if (pokemon.name.toLowerCase().includes(searchText)) {\n          return true;\n        } else if (\n          searchText.includes('fi') &&\n          pokemon.types.includes('fire')\n        ) {\n          return true;\n        } else if (\n          searchText.includes('w') &&\n          pokemon.types.includes('water')\n        ) {\n          return true;\n        } else if (searchText.includes('b') && pokemon.types.includes('bug')) {\n          return true;\n        } else if (\n          searchText.includes('grass') &&\n          pokemon.types.includes('grass')\n        ) {\n          return true;\n        } else if (\n          searchText.includes('f') &&\n          pokemon.types.includes('flying')\n        ) {\n          return true;\n        } else if (\n          searchText.includes('po') &&\n          pokemon.types.includes('poison')\n        ) {\n          return true;\n        } else if (searchText.includes('r') && pokemon.types.includes('rock')) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n\n      //FIXME. Want to add just one filter for all checkboxes here.\n\n      .filter((pokemon) =>\n        this.state.isType === true ? pokemon.types.includes('fire') : true\n      )\n      .filter((pokemon) =>\n        this.state.isTypeWater === true ? pokemon.types.includes('water') : true\n      )\n\n      .filter((pokemon) =>\n        this.state.isTypePoison === true\n          ? pokemon.types.includes('poison')\n          : true\n      )\n\n      .filter((pokemon) =>\n        this.state.isTypeGrass === true ? pokemon.types.includes('grass') : true\n      )\n      .filter((pokemon) =>\n        this.state.isTypeFlying === true\n          ? pokemon.types.includes('flying')\n          : true\n      )\n      .filter((pokemon) =>\n        this.state.isTypeBug === true ? pokemon.types.includes('bug') : true\n      )\n      .filter((pokemon) =>\n        this.state.isTypeRock === true ? pokemon.types.includes('rock') : true\n      )\n\n      .filter((pokemon) =>\n        this.state.isTypeElectric === true\n          ? pokemon.types.includes('electric')\n          : true\n      )\n      .filter((pokemon) =>\n        this.state.isTypeConfusion === true\n          ? pokemon.types.includes('confusion')\n          : true\n      );\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Search\n          searchHandler={this.searchHandler}\n          isType={this.state.isType}\n          isTypeWater={this.state.isTypeWater}\n          isTypeHandler={this.isTypeHandler}\n        />\n\n        <PokeList\n          pokemons={!filteredPokemons ? pokemonsSearch : filteredPokemons}\n          favPokemons={this.state.favPokemons}\n          favHandler={this.favHandler}\n        />\n\n        <h2>Favoritos</h2>\n        <PokeList\n          className=\"pokemon-favs\"\n          pokemons={newFavPokemons}\n          favPokemons={this.state.favPokemons}\n          favHandler={this.favHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}