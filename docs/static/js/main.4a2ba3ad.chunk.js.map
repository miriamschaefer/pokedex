{"version":3,"sources":["components/Pokemon.js","components/PokeList.js","components/Header.js","components/FavList.js","components/App.js","index.js"],"names":["Pokemon","props","favHandlerChild","bind","ev","this","favHandler","types","map","type","index","key","className","favPokemons","includes","id","toString","onClick","name","src","url","alt","evolution","React","Component","defaultProps","PokeList","pokemonResult","pokemons","pokemon","Header","FavList","favedPokemons","console","log","App","state","pokemonsFromApi","currentTarget","selectedPokemon","unFavedPokemon","filter","setState","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m2DAGMA,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFN,E,4DAKHC,GACdC,KAAKJ,MAAMK,WAAWF,K,+BAItB,IACMG,EADeF,KAAKJ,MAAMM,MACLC,KAAI,SAACC,EAAMC,GACpC,OAAO,wBAAIC,IAAKD,GAAQD,MAG1B,OACE,wBACEG,UAAS,kCACPP,KAAKJ,MAAMY,YAAYC,SAAST,KAAKJ,MAAMc,GAAGC,YAAc,MAAQ,IAEtEC,QAASZ,KAAKH,gBACda,GAAIV,KAAKJ,MAAMc,IAEf,wBAAIH,UAAU,iCAAiCP,KAAKJ,MAAMiB,MAC1D,yBAAKC,IAAKd,KAAKJ,MAAMmB,IAAKC,IAAKhB,KAAKJ,MAAMiB,OAC1C,uBAAGN,UAAU,6CAAb,cACA,uBAAGA,UAAU,gDACe,OAAzBP,KAAKJ,MAAMqB,UACR,kBACAjB,KAAKJ,MAAMqB,WAEjB,yBAAKV,UAAU,kCACb,uBAAGA,UAAU,yCAAb,UACA,wBAAIA,UAAU,2CAA2CL,S,GAlC7CgB,IAAMC,YAyC5BxB,EAAQyB,aAAe,CACrBH,UAAW,WAUEtB,QC/BA0B,E,uKApBH,IAAD,OACDC,EAAgBtB,KAAKJ,MAAM2B,SAASpB,KAAI,SAACqB,GAC7C,OACE,kBAAC,EAAD,CACElB,IAAKkB,EAAQd,GACbA,GAAIc,EAAQd,GACZG,KAAMW,EAAQX,KACdX,MAAOsB,EAAQtB,MACfa,IAAKS,EAAQT,IACbE,UAAWO,EAAQP,UACnBhB,WAAY,EAAKL,MAAMK,WACvBO,YAAa,EAAKZ,MAAMY,iBAK9B,OAAO,wBAAID,UAAU,kBAAkBe,O,GAjBpBJ,IAAMC,WCSdM,E,uKARX,OACE,4BAAQlB,UAAU,UAChB,wBAAIA,UAAU,cAAd,gB,GAJaW,IAAMC,W,OCkBZO,E,uKAfX,IAAMC,EAAgB3B,KAAKJ,MAAMY,YAAYL,KAAI,SAACqB,EAASnB,GAGzD,OAFAuB,QAAQC,IAAIL,GAEL,wBAAIlB,IAAKD,GAAQmB,MAG1B,OACE,6BACE,8CACA,wBAAIjB,UAAU,wBAAwBoB,Q,GAXxBT,IAAMC,WC6CbW,E,kDAxCb,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IACDmC,MAAQ,CACXR,SAAUS,EACVxB,YAAa,IAEf,EAAKP,WAAa,EAAKA,WAAWH,KAAhB,gBAND,E,uDASRC,GACT,IAAMS,EAAcR,KAAK+B,MAAMvB,YAE/B,GAAIA,EAAYC,SAASV,EAAGkC,cAAcvB,GAAGC,YAAa,CACxD,IAAMuB,EAAkBnC,EAAGkC,cAAcvB,GAAGC,WACtCwB,EAAiB3B,EAAY4B,QACjC,SAACZ,GAAD,OAAaA,IAAYU,KAG3BlC,KAAKqC,SAAS,CAAE7B,YAAa2B,SAE7B3B,EAAY8B,KAAKvC,EAAGkC,cAAcvB,IAClCV,KAAKqC,SAAS,CAAE7B,YAAaA,M,+BAK/B,OACE,yBAAKD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEgB,SAAUvB,KAAK+B,MAAMR,SACrBf,YAAaR,KAAK+B,MAAMvB,YACxBP,WAAYD,KAAKC,aAEnB,kBAAC,EAAD,CAASO,YAAaR,KAAK+B,MAAMvB,mB,GAnCvBU,IAAMC,WCFxBoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4a2ba3ad.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Pokemon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.favHandlerChild = this.favHandlerChild.bind(this);\n  }\n\n  favHandlerChild(ev) {\n    this.props.favHandler(ev);\n  }\n\n  render() {\n    const pokemonTypes = this.props.types;\n    const types = pokemonTypes.map((type, index) => {\n      return <li key={index}>{type}</li>;\n    });\n\n    return (\n      <li\n        className={`App__container__pokemon ${\n          this.props.favPokemons.includes(this.props.id.toString()) ? 'fav' : ''\n        }`}\n        onClick={this.favHandlerChild}\n        id={this.props.id}\n      >\n        <h2 className=\"App__container__pokemon__name\">{this.props.name}</h2>\n        <img src={this.props.url} alt={this.props.name} />\n        <p className=\"App__container__pokemon__evolution__title\">Evolution:</p>\n        <p className=\"App__container__pokemon__evolution__pokemons\">\n          {this.props.evolution === null\n            ? 'First evolution'\n            : this.props.evolution}\n        </p>\n        <div className=\"App__container__pokemon__types\">\n          <p className=\"App__container__pokemon__types__title\">Types:</p>\n          <ul className=\"App__container__pokemon__types__content\">{types}</ul>\n        </div>\n      </li>\n    );\n  }\n}\n\nPokemon.defaultProps = {\n  evolution: 'No data',\n};\n\nPokemon.propTypes = {\n  url: PropTypes.string,\n  name: PropTypes.string,\n  types: PropTypes.array,\n  evolution: PropTypes.string,\n};\n\nexport default Pokemon;\n","import React from 'react';\nimport Pokemon from './Pokemon';\n\nclass PokeList extends React.Component {\n  render() {\n    const pokemonResult = this.props.pokemons.map((pokemon) => {\n      return (\n        <Pokemon\n          key={pokemon.id}\n          id={pokemon.id}\n          name={pokemon.name}\n          types={pokemon.types}\n          url={pokemon.url}\n          evolution={pokemon.evolution}\n          favHandler={this.props.favHandler}\n          favPokemons={this.props.favPokemons}\n        />\n      );\n    });\n\n    return <ul className=\"App__container\">{pokemonResult}</ul>;\n  }\n}\n\nexport default PokeList;\n","import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <h1 className=\"App__title\">Pokedex</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport FavPokemon from './Pokemon';\n\nclass FavList extends React.Component {\n  render() {\n    const favedPokemons = this.props.favPokemons.map((pokemon, index) => {\n      console.log(pokemon);\n\n      return <li key={index}>{pokemon}</li>;\n    });\n\n    return (\n      <div>\n        <h2>My fav Pokemon</h2>\n        <ul className=\"App__container__favs\">{favedPokemons}</ul>\n      </div>\n    );\n  }\n}\n\nexport default FavList;\n","import React from 'react';\nimport '../stylesheets/App.scss';\nimport PokeList from './PokeList';\nimport Header from './Header';\nimport pokemonsFromApi from '../data/pokemons.json';\nimport FavList from './FavList';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemons: pokemonsFromApi,\n      favPokemons: [],\n    };\n    this.favHandler = this.favHandler.bind(this);\n  }\n\n  favHandler(ev) {\n    const favPokemons = this.state.favPokemons;\n\n    if (favPokemons.includes(ev.currentTarget.id.toString())) {\n      const selectedPokemon = ev.currentTarget.id.toString();\n      const unFavedPokemon = favPokemons.filter(\n        (pokemon) => pokemon !== selectedPokemon\n      );\n\n      this.setState({ favPokemons: unFavedPokemon });\n    } else {\n      favPokemons.push(ev.currentTarget.id);\n      this.setState({ favPokemons: favPokemons });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <PokeList\n          pokemons={this.state.pokemons}\n          favPokemons={this.state.favPokemons}\n          favHandler={this.favHandler}\n        />\n        <FavList favPokemons={this.state.favPokemons} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}